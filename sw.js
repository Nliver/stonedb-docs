(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"d240b960736dba8442b3f581d42ab14d","url":"404.html"},{"revision":"b057e175e4208f38a9d73e5be06e0b78","url":"assets/css/styles.437cdbff.css"},{"revision":"977787fb448cb61970883ddfbb8c1572","url":"assets/js/04a1ff1d.7f5a7a3d.js"},{"revision":"15bf948d5fa6d9f3d8ac5b213da864f9","url":"assets/js/08e78a0e.bfd7208a.js"},{"revision":"faf411d2312622779bcf877ad59fca59","url":"assets/js/0ad4fb1f.2aa9a3c4.js"},{"revision":"40a060965344053f4c5959d22dbcc53f","url":"assets/js/0f716783.506cbc41.js"},{"revision":"5abbe99955f685121a12d5dd136ff06b","url":"assets/js/131.22a31100.js"},{"revision":"ca75fb73d06063b6a5310fd144ffb45f","url":"assets/js/13e82bbd.d5f0fd10.js"},{"revision":"89e17d2a1afd1b231b79af88c2f58916","url":"assets/js/14eb3368.505aa190.js"},{"revision":"ebd8abbd7bfb40fb54795ac4c4d563f9","url":"assets/js/17896441.557157e1.js"},{"revision":"6fdbf7d181ee44a2b49a105abe59873b","url":"assets/js/1be78505.c6e82214.js"},{"revision":"4956fb36fb58060623651fe00240803d","url":"assets/js/1df93b7f.2320ac63.js"},{"revision":"351d58fa4855ed4827e89128c5a501b1","url":"assets/js/230.e5d532a2.js"},{"revision":"19d806b47ef0ca9c1b99969fe6419684","url":"assets/js/283.cd2f1bc1.js"},{"revision":"4eae863b3a3f97e2f846b70cae1d594c","url":"assets/js/2b1e257e.058467d1.js"},{"revision":"14d6db8c2b339f3342ee6c42820d5a40","url":"assets/js/323a772d.d972948c.js"},{"revision":"2b555a00150d12546cbbb12aa193686b","url":"assets/js/362dbadd.162ccac5.js"},{"revision":"38fdb883f48572f2e14a633de8863f0a","url":"assets/js/3819a278.988aebb3.js"},{"revision":"b9026dda4596ed89dd1174d78fac9a02","url":"assets/js/47a2ab89.bcf190b6.js"},{"revision":"7f5efb360b784a7ca8f03c8ad6e3cfc8","url":"assets/js/4e9af88f.64a958d6.js"},{"revision":"71438db6cdb36938585ca87ec467cfb9","url":"assets/js/515.bbaa89ed.js"},{"revision":"2de7044c02f8749ada99eb6d4f0189d2","url":"assets/js/598ea675.11985900.js"},{"revision":"42ee27a5e9b9551a86a945f099333411","url":"assets/js/5ed9614c.bc286205.js"},{"revision":"6a5198953f2e766921e4918410da283d","url":"assets/js/7acb1c21.26d3c8f3.js"},{"revision":"1a5aa4d4a4aed155aef7e6b5709777ab","url":"assets/js/7ceb65cf.50271857.js"},{"revision":"dc4d7fc04dec9faa297e1bf2099c3db2","url":"assets/js/85e76eb8.b674b469.js"},{"revision":"53f70cfb76e811a8661c0f44fa36c7c0","url":"assets/js/88aa99b3.23805d70.js"},{"revision":"0ba0fc61b71ae2c59bbecf29c1c5f603","url":"assets/js/935f2afb.fcf6c9a7.js"},{"revision":"498d6ec9c93b7d0271ffb7d5cc0c8e6f","url":"assets/js/95.45d99f21.js"},{"revision":"a0f06fda2e6f93d681c2968e86dfa1fa","url":"assets/js/979.373fa54f.js"},{"revision":"9aa8dc5ab8d9bbd0bfdab2f29a0b5efc","url":"assets/js/9e4087bc.968a11bd.js"},{"revision":"eb7e1c1d7c4ed49cba6901185453d247","url":"assets/js/a1aff75e.a2932421.js"},{"revision":"c1fff6f5d798f08ed570f2fed0aaf239","url":"assets/js/a30d9234.c63bd7cd.js"},{"revision":"bc352c7698251f19bc4e6907e2aace3a","url":"assets/js/a60863b3.93ce0573.js"},{"revision":"eb47ec9cb7dcf2ad648a45d43dd2d1d3","url":"assets/js/a6aa9e1f.5f8eb6af.js"},{"revision":"1b42d6a9bee61629ab989d33ec4c071b","url":"assets/js/b0461066.6476d8b3.js"},{"revision":"f259a34b4b64c7470ab50bf0c93090c0","url":"assets/js/b5e1e86c.f8c36356.js"},{"revision":"4569166d3335debc96adf54b3d50ad57","url":"assets/js/b6a2d028.378ef763.js"},{"revision":"c52bfe07c0aa5f05fe601031c695ca27","url":"assets/js/b6dcf72c.e81f7f67.js"},{"revision":"65956a32a99160ce0d4922ed9fccb8de","url":"assets/js/bbef8dd2.40a1d2a8.js"},{"revision":"3aa65b33d9cac5f9f4aebe2faa05b1c9","url":"assets/js/c0b8e79e.5b2417ac.js"},{"revision":"30160a24f9ba95a4b0cedf120cb94581","url":"assets/js/c9277353.c41aeca3.js"},{"revision":"ea233eb8a0d74df2efbaa6e4dc203071","url":"assets/js/ccc49370.6b6f0324.js"},{"revision":"04f7c04f490abe1f950acd6e889fcfe7","url":"assets/js/e5c6d364.fdc2ed24.js"},{"revision":"d9a568c345e38f2b6032e694afebe552","url":"assets/js/f0e3321f.a1f8861e.js"},{"revision":"8f36ceb6b893fb43e0316611db8d9b66","url":"assets/js/f3eabdeb.4ce6991c.js"},{"revision":"764263e3b1c35df47899d704bec876fc","url":"assets/js/f7366610.2285bd1a.js"},{"revision":"d76129fd51f48986d7f32f9c48dc9123","url":"assets/js/f9e23376.9c02feb0.js"},{"revision":"69a01df8204aabdd10e65f26d7c7af92","url":"assets/js/fe0fd020.f4772e84.js"},{"revision":"520e6001d4d5275970bc20cb5bd5de9b","url":"assets/js/main.8f39c472.js"},{"revision":"38c8523f053ba2e46300ee909bad656b","url":"assets/js/runtime~main.ed6c05a1.js"},{"revision":"b0a6e150e99ecf01d10fdd701d8068f6","url":"community/archive/index.html"},{"revision":"b8065757f44fe656ac416669d4772ccd","url":"community/index.html"},{"revision":"6fdb9fce645762034b9992cab0e43258","url":"community/main/index.html"},{"revision":"04ae4200c0c97e1d362409e60b533090","url":"docs/about-stonedb/architecture/index.html"},{"revision":"d361de792251f7396aedd2faadadafa1","url":"docs/about-stonedb/intro/index.html"},{"revision":"5a79ef1df8749629baaa222491286958","url":"docs/about-stonedb/limits/index.html"},{"revision":"57e3022000f710d67d98b74ba6d5b75d","url":"docs/about-stonedb/terms/index.html"},{"revision":"ae28ab6ad971bed69ef41de0d8a21f98","url":"docs/compiling-methods/index.html"},{"revision":"e9eb377289c3fbce288475f2f258fe6f","url":"docs/developer-guide/compiling-methods/compile-overview/index.html"},{"revision":"6071cce95d671fb5c849fa5083efec94","url":"docs/developer-guide/compiling-methods/compile-using-centos7/index.html"},{"revision":"da36b02a95abf1aa593ee45d6fdbcd8c","url":"docs/developer-guide/compiling-methods/compile-using-docker/index.html"},{"revision":"f2b847c6aeb94effc353fca7a45119fe","url":"docs/developer-guide/compiling-methods/compile-using-redhat7/index.html"},{"revision":"8d6ecd581dfa54c3c152565104c28c63","url":"docs/developer-guide/compiling-methods/compile-using-ubuntu20.04/index.html"},{"revision":"21b0ebe4944e8f2b51024498421be00c","url":"docs/developer-guide/connect-to-stonedb/use-mysql-client/index.html"},{"revision":"7c8466fbf9e68b49018cb441f15a1de5","url":"docs/developer-guide/connect-to-stonedb/use-navicat/index.html"},{"revision":"70e4fd862e23e56c4cc01ff721d9c6ad","url":"docs/developer-guide/regular-change-operations/index.html"},{"revision":"a16aacc28dc1535a3699864871b7e3e0","url":"docs/developer-guide/statements-for-queries/index.html"},{"revision":"b397aabc1800670d0814ede45513ecf9","url":"docs/download/index.html"},{"revision":"eb4fc34bfd7e0327b7e8ae367c9a9eee","url":"docs/environment-requirements/server-configuration-requirements/index.html"},{"revision":"ed79b6e65e30777403b1597603b63959","url":"docs/environment-requirements/supported-servers-and-OSs/index.html"},{"revision":"23e5b264bc6cd8394521949137bab9d3","url":"docs/getting-started/basic-operations/index.html"},{"revision":"661164660c2d469859fff17521b6e00f","url":"docs/getting-started/quick-deployment/index.html"},{"revision":"b0abadfc8937fc004b379be29bf117bb","url":"docs/getting-started/quick-start/index.html"},{"revision":"1252a3424a1eedab55874214ac84e305","url":"docs/O&M-Guide/backup-and-recovery/use-mydumper-full-backup/index.html"},{"revision":"7e47f9e359b0f434cf3d0356ee31acf5","url":"docs/O&M-Guide/backup-and-recovery/use-mysqldump-backup-and-restore/index.html"},{"revision":"9715c5ef6735f426caee8a60ed4afe3f","url":"docs/O&M-Guide/monitoring-and-alerting/prometheus+grafana-monitor/index.html"},{"revision":"1b0b5ba9113fba529d8ed576de626aa0","url":"docs/O&M-Guide/regular-change-operations/index.html"},{"revision":"01a34796b689c54ea03b148ce69afb07","url":"index.html"},{"revision":"dcab6c00a8c6209bde94bff518af6cda","url":"manifest.json"},{"revision":"88419e5968086157a20a04322e67fff0","url":"styles/panel/index.html"},{"revision":"ea268e49582a11ab959bd8b7f30ff025","url":"img/favicon.ico"},{"revision":"d1d317e005b3aacd7897bb7c1004e296","url":"img/icons/128x128.png"},{"revision":"6ccd311f69702a4cdc1a599e7f303fec","url":"img/icons/144x144.png"},{"revision":"4068161cc8a2a4560a4b36b776d1f65c","url":"img/icons/152x152.png"},{"revision":"8d5af5791199ee12e1a5c40d62e0d764","url":"img/icons/192x192.png"},{"revision":"7743d9b2795bb4fd1e5ddbdde473321a","url":"img/icons/200x200.png"},{"revision":"0e505d2a9544b814a0d52ae4b700eef2","url":"img/icons/384x384.png"},{"revision":"6b5692ea59db253b55538632470b789c","url":"img/icons/512x512.png"},{"revision":"ab6607844950cb665f06c079a7ff939a","url":"img/icons/72x72.png"},{"revision":"87ff0ff98feac058d7c72aa4df4c131e","url":"img/icons/96x96.png"},{"revision":"b633060f5875949127f6a8a772af51ec","url":"img/logo_stonedb.svg"},{"revision":"7743d9b2795bb4fd1e5ddbdde473321a","url":"img/stoneDB.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();